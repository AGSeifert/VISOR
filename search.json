[{"path":"https://agseifert.github.io/VISOR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Florian Gärber Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://agseifert.github.io/VISOR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Gärber. Maintainer, author.","code":""},{"path":"https://agseifert.github.io/VISOR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gärber F (2023). VISOR: Interoperable Spectra Objects R. https://agseifert.github.io/VISOR/, https://github.com/AGSeifert/VISOR.","code":"@Manual{,   title = {VISOR: Very Interoperable Spectra Objects for R},   author = {Florian Gärber},   year = {2023},   note = {https://agseifert.github.io/VISOR/, https://github.com/AGSeifert/VISOR}, }"},{"path":"https://agseifert.github.io/VISOR/index.html","id":"very-interoperable-spectra-objects-for-r","dir":"","previous_headings":"","what":"Very Interoperable Spectra Objects for R","title":"Very Interoperable Spectra Objects for R","text":"VISOR helps facilitate transformation spectral data various open source data formats (like ChemoSpec hyperSpec), different file readers well data formats. allows interoperability pre-processing, plotting, data analysis workflows developed different packages mind.","code":""},{"path":"https://agseifert.github.io/VISOR/index.html","id":"supported-data-formats","dir":"","previous_headings":"","what":"Supported data formats","title":"Very Interoperable Spectra Objects for R","text":"supported packages split two groups: Target Source formats. Target formats primary formats converted . Every target format must function converting every target format directly. Current target formats : ChemoSpec hyperSpec Source formats additional formats, data-loading packages open specific file formats (Opus, Excel, CSV). Every source format must convert least one target format. may convert multiple target formats nested conversions, converting format converted compatible formats first. Current source formats : simplerspec","code":""},{"path":"https://agseifert.github.io/VISOR/reference/ChemoSpec_to_hyperSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","title":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","text":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec","code":""},{"path":"https://agseifert.github.io/VISOR/reference/ChemoSpec_to_hyperSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","text":"","code":"ChemoSpec_to_hyperSpec(Spectra, ...)"},{"path":"https://agseifert.github.io/VISOR/reference/ChemoSpec_to_hyperSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","text":"Spectra ChemoSpec::Spectra() object. ... Arguments passed hyperSpec::new_hyperSpec gc (logical)  Use garbage collection. option gc TRUE, initialization frequent calls base::gc(), can help avoid swapping running memory. default value gc can set via hy_set_options().","code":""},{"path":"https://agseifert.github.io/VISOR/reference/ChemoSpec_to_hyperSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","text":"hyperSpec::hyperSpec object.","code":""},{"path":[]},{"path":"https://agseifert.github.io/VISOR/reference/ChemoSpec_to_hyperSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChemoSpec 🟠 ➡️ 🔵 hyperSpec — ChemoSpec_to_hyperSpec","text":"","code":"suppressPackageStartupMessages(library(ChemoSpec)) data(\"alignMUD\") ChemoSpec_to_hyperSpec(alignMUD) |> str() #> Warning: replacing previous import ‘lazyeval::is_lang’ by ‘rlang::is_lang’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::call_modify’ by ‘rlang::call_modify’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::is_call’ by ‘rlang::is_call’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::is_formula’ by ‘rlang::is_formula’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::as_name’ by ‘rlang::as_name’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_label’ by ‘rlang::f_label’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::is_atomic’ by ‘rlang::is_atomic’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::is_pairlist’ by ‘rlang::is_pairlist’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::call_standardise’ by ‘rlang::call_standardise’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::expr_text’ by ‘rlang::expr_text’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_env<-’ by ‘rlang::f_env<-’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_text’ by ‘rlang::f_text’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::missing_arg’ by ‘rlang::missing_arg’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_rhs<-’ by ‘rlang::f_rhs<-’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_rhs’ by ‘rlang::f_rhs’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_env’ by ‘rlang::f_env’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_lhs<-’ by ‘rlang::f_lhs<-’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::expr_label’ by ‘rlang::expr_label’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘lazyeval::f_lhs’ by ‘rlang::f_lhs’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘rlang::as_list’ by ‘xml2::as_list’ when loading ‘hyperSpec’ #> Warning: replacing previous import ‘latticeExtra::layer’ by ‘ggplot2::layer’ when loading ‘hyperSpec’ #> Formal class 'hyperSpec' [package \"hyperSpec\"] with 4 slots #>   ..@ wavelength: num [1:1500] 5 5 4.99 4.99 4.99 ... #>   ..@ data      :'data.frame':\t20 obs. of  5 variables: #>   .. ..$ groups : Factor w/ 1 level \"S\": 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ colors : chr [1:20] \"black\" \"black\" \"black\" \"black\" ... #>   .. ..$ sym    : num [1:20] 19 19 19 19 19 19 19 19 19 19 ... #>   .. ..$ alt.sym: chr [1:20] \"+\" \"+\" \"+\" \"+\" ... #>   .. ..$ spc    : num [1:20, 1:1500] 0.01225 0.01043 0.00955 0.01113 0.01042 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : NULL #>   .. .. .. ..$ : chr [1:1500] \"5\" \"4.99666\" \"4.99333\" \"4.98999\" ... #>   ..@ label     :List of 2 #>   .. ..$ .wavelength:  expression(\"ppm\") #>   .. ..$ spc        :  expression(\"intensity\") #>   ..@ log       :'data.frame':\t0 obs. of  0 variables #> Formal class 'data.frame' [package \"methods\"] with 4 slots #>   .. .. ..@ .Data    : list() #>   .. .. ..@ names    : chr(0)  #>   .. .. ..@ row.names: int(0)  #>   .. .. ..@ .S3Class : chr \"data.frame\""},{"path":"https://agseifert.github.io/VISOR/reference/hyperSpec_to_ChemoSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"hyperSpec 🔵  ➡️ 🟠 ChemoSpec — hyperSpec_to_ChemoSpec","title":"hyperSpec 🔵  ➡️ 🟠 ChemoSpec — hyperSpec_to_ChemoSpec","text":"ChemoSpec requires hyperSpec object meets following conditions: Wavelengths must unique. Spectra must contain NAs.","code":""},{"path":"https://agseifert.github.io/VISOR/reference/hyperSpec_to_ChemoSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hyperSpec 🔵  ➡️ 🟠 ChemoSpec — hyperSpec_to_ChemoSpec","text":"","code":"hyperSpec_to_ChemoSpec(hySpc, names, groups, ...)"},{"path":"https://agseifert.github.io/VISOR/reference/hyperSpec_to_ChemoSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hyperSpec 🔵  ➡️ 🟠 ChemoSpec — hyperSpec_to_ChemoSpec","text":"hySpc hyperSpec::hyperSpec object. names Character vector unique sample names. Length must match nrow() data. Defaults rownames() data. groups Factor sample class assignments. Length must match nrow() data. ... Arguments passed to_ChemoSpec desc Optional description plots generated ChemoSpec. colors_set,sym_set,alt.sym_set Character vector group colors, Numeric vector group symbol numbers, Character vector alternative group symbols. length must match least number levels groups. Groups assigned colors based numeric factor level. Defaults ChemoSpecUtils::Col8, ChemoSpecUtils::Sym8 base::letters. color-blind friendly palette available ChemoSpecUtils::Col7. Extended palettes available ChemoSpecUtils::Col12, ChemoSpecUtils::Sym12, using packages, like RColorBrewer. .strict_extra_data_names (Default: TRUE) Set FALSE allow columns extra_data overwrite values Spectra object.","code":""},{"path":[]},{"path":"https://agseifert.github.io/VISOR/reference/hyperSpec_to_ChemoSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hyperSpec 🔵  ➡️ 🟠 ChemoSpec — hyperSpec_to_ChemoSpec","text":"","code":"suppressPackageStartupMessages(library(hyperSpec)) data(flu) hyperSpec_to_ChemoSpec(   flu,   names = 1:6 |> as.character(),   groups = LETTERS[1:6] |> as.factor() ) |> str() #> \tAdditional data was found: filename #> \tAdditional data was found: c #> List of 11 #>  $ data    : num [1:6, 1:181] 27.1 66.8 93.1 130.7 167.3 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:181] \"405\" \"405.5\" \"406\" \"406.5\" ... #>  $ freq    : num [1:181] 405 406 406 406 407 ... #>  $ unit    : chr [1:2] \"lambda/nm\" \"I[fl]/\\\"a.u.\\\"\" #>  $ desc    : chr \"{missing description}\" #>  $ groups  : Factor w/ 6 levels \"A\",\"B\",\"C\",\"D\",..: 1 2 3 4 5 6 #>  $ names   : chr [1:6] \"1\" \"2\" \"3\" \"4\" ... #>  $ colors  : chr [1:6] \"#511CFCFF\" \"#FB0D16FF\" \"#2AA30DFF\" \"#700D87FF\" ... #>  $ sym     : num [1:6] 0 1 2 3 15 16 #>  $ alt.sym : chr [1:6] \"a\" \"b\" \"c\" \"d\" ... #>  $ filename: chr [1:6] \"rawdata/flu1.txt\" \"rawdata/flu2.txt\" \"rawdata/flu3.txt\" \"rawdata/flu4.txt\" ... #>  $ c       : num [1:6] 0.05 0.1 0.15 0.2 0.25 0.3 #>  - attr(*, \"class\")= chr \"Spectra\""},{"path":"https://agseifert.github.io/VISOR/reference/matrix_to_ChemoSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","title":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","text":"Matrix ⚪ ➡️ 🟠 ChemoSpec","code":""},{"path":"https://agseifert.github.io/VISOR/reference/matrix_to_ChemoSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","text":"","code":"matrix_to_ChemoSpec(data, groups, ...)"},{"path":"https://agseifert.github.io/VISOR/reference/matrix_to_ChemoSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","text":"data Numeric matrix sample rows frequency cols. rownames() must unique contain sample names. colnames() must unique contain frequency values, can cast numeric using .numeric(). groups Factor sample class assignments. Length must match nrow() data. ... Arguments passed to_ChemoSpec unit_frequency,unit_intensity Optional labels x- y-axis. desc Optional description plots generated ChemoSpec. colors_set,sym_set,alt.sym_set Character vector group colors, Numeric vector group symbol numbers, Character vector alternative group symbols. length must match least number levels groups. Groups assigned colors based numeric factor level. Defaults ChemoSpecUtils::Col8, ChemoSpecUtils::Sym8 base::letters. color-blind friendly palette available ChemoSpecUtils::Col7. Extended palettes available ChemoSpecUtils::Col12, ChemoSpecUtils::Sym12, using packages, like RColorBrewer. extra_data Optional data frame samples rows additional per-sample data columns. colnames() extra_data used obtain names used names() Spectra object. .strict_extra_data_names (Default: TRUE) Set FALSE allow columns extra_data overwrite values Spectra object.","code":""},{"path":"https://agseifert.github.io/VISOR/reference/matrix_to_ChemoSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","text":"ChemoSpec::Spectra() object.","code":""},{"path":[]},{"path":"https://agseifert.github.io/VISOR/reference/matrix_to_ChemoSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix ⚪ ➡️ 🟠 ChemoSpec — matrix_to_ChemoSpec","text":"","code":"x <- matrix(runif(260), nrow = 26) rownames(x) <- letters[1:26] colnames(x) <- 1:10 matrix_to_ChemoSpec(   x,   groups = rep(LETTERS[1:2], 13) |> as.factor() ) |> str() #> List of 9 #>  $ data   : num [1:26, 1:10] 0.98 0.455 0.538 0.276 0.746 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:26] \"a\" \"b\" \"c\" \"d\" ... #>   .. ..$ : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>  $ freq   : num [1:10] 1 2 3 4 5 6 7 8 9 10 #>  $ unit   : chr [1:2] \"{missing frequency unit}\" \"{missing intensity unit}\" #>  $ desc   : chr \"{missing description}\" #>  $ groups : Factor w/ 2 levels \"A\",\"B\": 1 2 1 2 1 2 1 2 1 2 ... #>  $ names  : chr [1:26] \"a\" \"b\" \"c\" \"d\" ... #>  $ colors : chr [1:26] \"#511CFCFF\" \"#FB0D16FF\" \"#511CFCFF\" \"#FB0D16FF\" ... #>  $ sym    : num [1:26] 0 1 0 1 0 1 0 1 0 1 ... #>  $ alt.sym: chr [1:26] \"a\" \"b\" \"a\" \"b\" ... #>  - attr(*, \"class\")= chr \"Spectra\""},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_ChemoSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","title":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","text":"data converted: Spectra columns except data_column Wavenumber columns except freq_column","code":""},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_ChemoSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","text":"","code":"simplerspec_to_ChemoSpec(   spc_tbl,   groups,   data_column = base::c(\"spc_pre\", \"spc_mean\", \"spc_rs\", \"spc\"),   freq_column = base::c(\"xvalues_pre\", \"wavenumbers_rs\", \"wavenumbers\"),   name_column = base::c(\"unique_id\", \"file_id\", \"sample_id\", \"sample_name\"),   .name_column_collapse = NULL,   .strict_column_check = TRUE,   ... )"},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_ChemoSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","text":"spc_tbl simplerspec::gather_spc, simplerspec::resample_spc, simplerspec::average_spc, simplerspec::preprocess_spc spectra tibble. groups Factor sample class assignments. Length must match nrow() data. data_column Column name data use. Must one \"spc_pre\", \"spc_mean\", \"spc_rs\", \"spc\", column name strict_column_check set FALSE. freq_column Column name data use. Must one \"xvalues_pre\", \"wavenumbers_rs\", \"wavenumbers\", column name strict_column_check set FALSE. name_column Column name data use. Must one \"unique_id\", \"file_id\", \"sample_id\", \"sample_name\", metadata column name strict_column_check set FALSE. .name_column_collapse (Default: NULL) Optional string, set allows multiple metadata column names set name_column, causing concatenated using .name_column_collapse separator. can used .strict_column_check = FALSE construct custom sample identifiers using metadata rep_no. .strict_column_check (Default: TRUE) Set FALSE allow using valid column name spc_tbl data_column freq_column, metadata column names name_column. ... Arguments passed to_ChemoSpec unit_frequency,unit_intensity Optional labels x- y-axis. desc Optional description plots generated ChemoSpec. colors_set,sym_set,alt.sym_set Character vector group colors, Numeric vector group symbol numbers, Character vector alternative group symbols. length must match least number levels groups. Groups assigned colors based numeric factor level. Defaults ChemoSpecUtils::Col8, ChemoSpecUtils::Sym8 base::letters. color-blind friendly palette available ChemoSpecUtils::Col7. Extended palettes available ChemoSpecUtils::Col12, ChemoSpecUtils::Sym12, using packages, like RColorBrewer. .strict_extra_data_names (Default: TRUE) Set FALSE allow columns extra_data overwrite values Spectra object.","code":""},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_ChemoSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","text":"ChemoSpec::Spectra() object.","code":""},{"path":[]},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_ChemoSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplerspec ⚪ ➡️ 🟠 ChemoSpec — simplerspec_to_ChemoSpec","text":"","code":"data(\"simplerspec_opus\") #> Warning: data set ‘simplerspec_opus’ not found simplerspec_to_ChemoSpec(   simplerspec_opus,   groups = factor(LETTERS[1:3]) ) |> str() #> Error in eval(expr, envir, enclos): object 'simplerspec_opus' not found"},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_hyperSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","title":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","text":"data converted: Spectra columns except spc_column Wavenumber columns except wavelength_column","code":""},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_hyperSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","text":"","code":"simplerspec_to_hyperSpec(   spc_tbl,   spc_column = base::c(\"spc_pre\", \"spc_mean\", \"spc_rs\", \"spc\"),   wavelength_column = base::c(\"xvalues_pre\", \"wavenumbers_rs\", \"wavenumbers\"),   unit_spc = \"{missing spectra unit}\",   unit_wavelength = \"{missing wavelength unit}\",   .strict_column_check = TRUE,   ... )"},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_hyperSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","text":"spc_tbl simplerspec::gather_spc, simplerspec::resample_spc, simplerspec::average_spc, simplerspec::preprocess_spc spectra tibble. spc_column Column name data use. Must one \"spc_pre\", \"spc_mean\", \"spc_rs\", \"spc\", column name strict_column_check set FALSE. wavelength_column Column name data use. Must one \"xvalues_pre\", \"wavenumbers_rs\", \"wavenumbers\", column name strict_column_check set FALSE. unit_wavelength, unit_spc Optional labels x- y-axis. .strict_column_check (Default: TRUE) Set FALSE allow using valid column name spc_tbl spc_column wavelength_column. ... Arguments passed hyperSpec::new_hyperSpec gc (logical)  Use garbage collection. option gc TRUE, initialization frequent calls base::gc(), can help avoid swapping running memory. default value gc can set via hy_set_options().","code":""},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_hyperSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","text":"ChemoSpec::Spectra() object.","code":""},{"path":[]},{"path":"https://agseifert.github.io/VISOR/reference/simplerspec_to_hyperSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplerspec ⚪ ➡️ 🔵 hyperSpec — simplerspec_to_hyperSpec","text":"","code":"data(\"simplerspec_opus\") #> Warning: data set ‘simplerspec_opus’ not found spectra <- simplerspec_to_hyperSpec(simplerspec_opus) |> str() #> Error in eval(expr, envir, enclos): object 'simplerspec_opus' not found"},{"path":"https://agseifert.github.io/VISOR/reference/to_ChemoSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"*️⃣ ChemoSpec — to_ChemoSpec","title":"*️⃣ ChemoSpec — to_ChemoSpec","text":"*️⃣ ChemoSpec","code":""},{"path":"https://agseifert.github.io/VISOR/reference/to_ChemoSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"*️⃣ ChemoSpec — to_ChemoSpec","text":"","code":"to_ChemoSpec(   data,   groups,   freq = base::as.numeric(base::colnames(data)),   names = base::rownames(data),   desc = \"{missing description}\",   unit_frequency = \"{missing frequency unit}\",   unit_intensity = \"{missing intensity unit}\",   colors_set = ChemoSpecUtils::Col8,   sym_set = ChemoSpecUtils::Sym8,   alt.sym_set = base::letters,   extra_data = NULL,   .strict_extra_data_names = TRUE )"},{"path":"https://agseifert.github.io/VISOR/reference/to_ChemoSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"*️⃣ ChemoSpec — to_ChemoSpec","text":"data Numeric matrix samples rows frequencies cols. groups Factor sample class assignments. Length must match nrow() data. freq Numeric vector unique frequencies. Length must match ncol() data. Defaults colnames() data cast .numeric(). names Character vector unique sample names. Length must match nrow() data. Defaults rownames() data. desc Optional description plots generated ChemoSpec. unit_frequency, unit_intensity Optional labels x- y-axis. colors_set, sym_set, alt.sym_set Character vector group colors, Numeric vector group symbol numbers, Character vector alternative group symbols. length must match least number levels groups. Groups assigned colors based numeric factor level. Defaults ChemoSpecUtils::Col8, ChemoSpecUtils::Sym8 base::letters. color-blind friendly palette available ChemoSpecUtils::Col7. Extended palettes available ChemoSpecUtils::Col12, ChemoSpecUtils::Sym12, using packages, like RColorBrewer. extra_data Optional data frame samples rows additional per-sample data columns. colnames() extra_data used obtain names used names() Spectra object. .strict_extra_data_names (Default: TRUE) Set FALSE allow columns extra_data overwrite values Spectra object.","code":""},{"path":"https://agseifert.github.io/VISOR/reference/to_ChemoSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"*️⃣ ChemoSpec — to_ChemoSpec","text":"ChemoSpec::Spectra() object.","code":""},{"path":"https://agseifert.github.io/VISOR/reference/to_hyperSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"*️⃣ hyperSpec — to_hyperSpec","title":"*️⃣ hyperSpec — to_hyperSpec","text":"*️⃣ hyperSpec","code":""},{"path":"https://agseifert.github.io/VISOR/reference/to_hyperSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"*️⃣ hyperSpec — to_hyperSpec","text":"","code":"to_hyperSpec(...)"},{"path":"https://agseifert.github.io/VISOR/reference/to_hyperSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"*️⃣ hyperSpec — to_hyperSpec","text":"... Arguments passed hyperSpec::new_hyperSpec spc (matrix convertible matrix)   spectra matrix spectra rows wavelength intensities columns. spc need R matrix, must object convertible matrix via (.matrix(spc)). data (data.frame)   data.frame extra (non-spectroscopic) data columns. data frame may also contain special column spc matrix spectroscopic data. (single column contains matrix can created data.frame(spc = (.matrix(spc))). However, usually convenient spectra given via argument spc.) wavelength (numeric vector)   wavelengths corresponding columns spc. wavelengths given, appropriate vector derived column column names data$spc. possible, 1:ncol(data$spc) used instead. labels named list: list's element names containing one names data columns well special name .wavelength wavelengths ). list's element values contain labels indicated names usually either character strings plotmath expressions. (labels given form ready text-drawing functions, see grDevices::plotmath()). label given, list containing NULL columns data wavelength used. gc (logical)  Use garbage collection. option gc TRUE, initialization frequent calls base::gc(), can help avoid swapping running memory. default value gc can set via hy_set_options().","code":""},{"path":"https://agseifert.github.io/VISOR/reference/to_hyperSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"*️⃣ hyperSpec — to_hyperSpec","text":"hyperSpec::hyperSpec object.","code":""},{"path":"https://agseifert.github.io/VISOR/news/index.html","id":"visor-development-version","dir":"Changelog","previous_headings":"","what":"VISOR (development version)","title":"VISOR (development version)","text":"Add to_ChemoSpec(), to_hyperSpec() Add matrix_to_ChemoSpec() Add simplerspec_to_ChemoSpec()","code":""}]
